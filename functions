# vi:ts=2 sw=2 tw=79 et lbr wrap
# Copyright 2019-present David Rabkin

# Simple calculator.
calc() {
  local result="";
  result="$(printf "scale=10;$*\n" | bc --mathlib | tr -d '\\\n')";
  if [[ "$result" == *.* ]]; then
    printf "$result" |
    sed -e 's/^\./0./'        `# add "0" for cases like ".5"` \
        -e 's/^-\./-0./'      `# add "0" for cases like "-.5"`\
        -e 's/0*$//;s/\.$//';  # remove trailing zeros
  else
    printf "$result";
  fi;
  printf "\n";
}

# Creates a new directory and enter it.
mkd() {
  mkdir -p "$@" && cd "$_";
}

# Determines size of a file or total size of a directory.
fs() {
  if du -b /dev/null > /dev/null 2>&1; then
    local arg=-sbh;
  else
    local arg=-sh;
  fi
  if [[ -n "$@" ]]; then
    du $arg -- "$@";
  else
    du $arg .[^.]* ./*;
  fi;
}

# Repeats history.
fh() {
  print -z $( ([ -n "$ZSH_NAME" ] && fc -l 1 || history) | fzf +s --tac | sed 's/ *[0-9]* *//')
}

# fkill - kill processes - list only the ones you can kill.
fkill() {
  local pid
  if [ "$UID" != "0" ]; then
    pid=$(ps -f -u $UID | sed 1d | fzf -m | awk '{print $2}')
  else
    pid=$(ps -ef | sed 1d | fzf -m | awk '{print $2}')
  fi
  if [ "x$pid" != "x" ]
  then
    echo $pid | xargs kill -${1:-9}
  fi
}

# fshow - git commit browser.
fshow() {
  git log --graph --color=always \
      --format="%C(auto)%h%d %s %C(black)%C(bold)%cr" "$@" |
  fzf --ansi --no-sort --reverse --tiebreak=index --bind=ctrl-s:toggle-sort \
      --bind "ctrl-m:execute:
        (grep -o '[a-f0-9]\{7\}' | head -1 |
        xargs -I % sh -c 'git show --color=always % | less -R') << 'FZF-EOF'
        {}
FZF-EOF"
}

cd() {
  if [[ "$#" != 0 ]]; then
    builtin cd "$@";
    return
  fi
  while true; do
    local lsd=$(echo ".." && ls -p | grep '/$' | sed 's;/$;;')
    local dir="$(printf '%s\n' "${lsd[@]}" |
      fzf --reverse --preview '
          __cd_nxt="$(echo {})";
          __cd_path="$(echo $(pwd)/${__cd_nxt} | sed "s;//;/;")";
          echo $__cd_path;
          echo;
          ls -p "${__cd_path}";
        ')"
    [[ ${#dir} != 0 ]] || return 0
    builtin cd "$dir" &> /dev/null
  done
}

# Select a docker container to start and attach to
da() {
  local cid
  cid=$(docker ps -a | sed 1d | fzf -1 -q "$1" | awk '{print $1}')
  [ -n "$cid" ] && docker start "$cid" && docker attach "$cid"
}

# Select a running docker container to stop
ds() {
  local cid
  cid=$(docker ps | sed 1d | fzf -q "$1" | awk '{print $1}')
  [ -n "$cid" ] && docker stop "$cid"
}

# Removes any file besides mp3, m4a, flac. Removes empty directories.
mp3only() {
  find . -type f \
    ! \( -name '*.mp3' -o -name '*.m4a' -o -name '*.flac' \)
  read -q "?Are you sure `pwd`? "
  if [[ $REPLY =~ ^[Yy]$ ]]; then
    find . -type f \
      ! \( -name '*.mp3' -o -name '*.m4a' -o -name '*.flac' \) \
      -exec rm -f {} +
    find . -type d -empty -delete
    echo "\nRemoved."
  fi
}

cheat() {
  curl cht.sh/$1
}

timestamp() {
  while IFS= read -r line; do
    printf '%s %s\n' "$(date '+%Y%m%d%H%M%S')" "$line";
  done
}

# Prints download and upload internet speed with timestamp.
speed-mon() {
  while true; do
    speed | \
      grep -E 'Download|Upload' | \
      gawk '{print $2}' | \
      xargs | \
      gawk '{print strftime("%Y%m%d-%H%M%S"), $0}'
    test $? -gt 128 && break
  done
}

qr() {
  qrencode "$1" -t ANSIUTF8 -o -;
}

pdf2jpg() {
  for i in *.pdf; do sips -s format jpeg $i --out $i.jpg; done
}

pdf2png() {
  command -v pdftoppm 2>/dev/null ||
    { echo 'Install pdftoppm, e.g. brew install poppler.'; return }
  find . -type f -name '*.pdf' -print0 |
    while IFS= read -r -d '' file; do
      echo "Convert $file."
      pdftoppm "${file}" "${file%.*}" -png
    done
}

vid2aud() {
  command -v ffmpeg >/dev/null 2>&1 || {
    printf 'Install ffmpeg.'
    exit 1
  }
  # shellcheck disable=SC2039
  find . -type f -maxdepth 1 -print0\
    \( -name \*.mp4 -o -name \*.m4v -o -name \*.avi -o -name \*.mkv \) |
    xargs -0 |
    while read -r -d ' ' src; do
      src=$(basename -- "$src")
      dst=${src%.*}.mp3
      printf 'Convert %s -> %s.\n' "$src" "$dst"
      ffmpeg -nostdin -i "$src" -vn -ar 44100 -ac 2 -ab 320k -f mp3 "$dst"
    done
}
